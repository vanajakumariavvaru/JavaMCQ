1. public static void main(String[] args) {
  	String name = null;
     	Optional<String> of = Optional.of(name);   System.out.println(of);
   }

	a.null
	b.0
	c.NullPointerException
	
Correct answer: c

2. public static void main(String[] args) {
	Optional<String> empty = Optional.empty();
	System.out.println(empty);
   }

	a.null
	b.0
	c.NullPointerException
	d.Optional.empty

Correct answer: d

3. Optional.of() java 8 feature is

	a.Used to ensure that there is no null, if null is entered, NullPointerException
	b.May or may not be null. Used to respond flexibly

Correct answer: a

4. Optional.ofNullable() java 8 feature is

	a.Used to ensure that there is no null, if null is entered, NullPointerException
	b.May or may not be null. Used to respond flexibly

Correct answer: b

5. What is the purpose of Optional class in java?

	a.To create a collection of optional objects
	b.To perform functional programming operations
	c.To handle null values and prevent null pointer exceptions

Correct answer: c

6. Java 8 Features - Optional, How many ways to crate an optional?

	a.1
	b.2
	c.3
	d.4

Correct answer: c

7. public static void main(String[] args) {
	String name = "java";
	Optional<String> of1 = Optional.ofNullable(name);
	System.out.println(of1);
   }
  
	a.null
	b.0
	c.NullPointerException
	d.Optional.empty

Correct answer: d

8. public class Interview2 {

	int number = 20;
	Interview2()
	{
	    number = 10;
	}
	public static void main(String[] args) {
		Interview2 interview = new Interview2();
		System.out.println(interview.number);	
	}
}

	a.10
	b.20
	c.Compiler error
	d.Exception

Correct answer: a

9. public class OptionalIfIsPresent {

	public static void main(String[] args) {
		String[] names = new String[5];
		Optional<String> opt = Optional.ofNullable(names[4]);
		if(opt.isPresent()) System.out.println(names[4]);
		else System.out.println("value is null");
	}
   }

	a.NullPointerException
	b.null
	c.value is null

Correct answer: c

10. public class OptionalIfPresent {

	public static void main(String[] args) {
		String[] names = {"a", "b", "c", "d", "e"};
		Optional<String> opt = Optional.ofNullable(names[4]);
		opt.ifPresent(s -> System.out.println(s));
	}
}

	a.NullPointerException
	b.true
	c.e
	d.false

Correct answer: c

11. public class OptionalOrElse {

	public static void main(String[] args) {
		String[] names = {"a", "b", "c", "d", null, "f"};
		Optional<String> opt = Optional.ofNullable(names[4]);
		System.out.println(opt.orElse("Default"));
	}
}

	a.null
	b.Default
	c.e
	d.NullPointerException

Correct answer: b

12. Since Java 21, can we use Simple HelloWorld program without class name and PSVM method?

	a.True
	b.False

Correct answer: a

13. Which keyword is used to create a thread in Java?

	a.new
	b.class
	c.thread
	d.start

Correct answer: c

14. Which method is used to start a thread in Java?

	a.run()
	b.start()
	c.execute()
	d.begin()

Correct answer: b

15.Can we call the run() method directly to start a thread?

	a.Yes
	b.No
	c.Only certain conditions
	d.Only after calling start()

Correct answer: b

16. What does the Runnable interface contain?

	a.Multiple methods
	b.Only the run() method
	c.A Variable
	d.Several Constructors

Correct answer: b

17. Which interface is used to define a thread in Java?	

	a.Runnable
	b.Threable
	c.Executor
	d.Processor

Correct answer: a

18. public static void main(String[] args) {
		int K = 15;
		int L = 25;
		int M = K;
		
		L = M;
		K = L;
		System.out.println(K + ", " + L);
	}

	a.15, 15
	b.25, 15
	c.25, 15
	d.25, 25

Correct answer: a

19. public static void main(String[] args) {
		Interview3 interview = new Interview3();
		interview.check_interview();
		interview.check_interview(10);
		interview.check_interview(10,20,30);
	}

	public void check_interview(int... a) {
		for(int i=0; i< a.length; i++) 
			System.out.println(a[i]);
		
	}

	a.10, 10, 20, 30
	b.0, 10, 20, 30
	c.0, 10, 10, 20
	d.0, 10, 10, 20,30

Correct answer: a

20. public static void main(String[] args) {
		System.out.println("hello");
	}
    
	public static void main(String args) {
		System.out.println("hi");
	}

	a.Compiler error
	b.Runtime Error
	c.hi
	d.hello

Correct answer: d

21. public static void main(String[] args) {
		Integer num1 =100;
		Integer num2 =100;
		Integer num3 =500;
		Integer num4 =500;
		
		if(num1 == num2) {
			System.out.println("num1 == num2");
		}
		else {
			System.out.println("num1 !== num2");
		}
		if(num3 == num4) {
			System.out.println("num3 == num4");
		}
		else {
			System.out.println("num3 !== num4");
		}
	}

	a.num1==num2  num3==num4
	b.num1==num2  num3!=num4
	c.num1!=num2  num3==num4
	d.num1!=num2  num3!=num4

Correct answer: b

22. public static void main(String[] args) {
  	int $_ = 5;
  	System.out.println($_); 
    }

	a.Compiletime error
	b.5
	c.Runtime Error

Correct answer: b

23. public static final void main(String[] args) {
  	System.out.println("Java");
    }

	a.Compiletime error
	b.Java
	c.Runtime Error

Correct answer: b

24. @SpringBootApplication annotation is == @Configuration, @EnableAutoConfiguration, @ComponentScan

	a.True
	b.False

Correct answer: a
By using the @SpringBootApplication annotation, developers can write less code and make their code easier to read and understand. 

25. public static void main(String[] args)
    {
	String str = "!!!emitefil a tsal dluoc ti meht rof tub, yas ot sdnoces ekat yam ti meht llet , enoemos ni lufituaeb gnihtemos ees uoy nehw";
	char[] ch = str.toCharArray();
        for (int i=ch.length-1;i>=0;i--)
        System.out.print(ch[i]);
    }

	a.Compiletime error
	b.String is reversed characterwise
	c.Runtime Error

Correct answer: b

26. public static void main(String[] args) {
		System.out.println("hello");
	}
    
	public static void main(String args) {
		System.out.println("hi");
	}

	a.Compiletime error
	b.hello
	c.Runtime Error
	d.hi
	e.hello hi

Correct answer: b

27. The java 5 feature has been introduced in Spring ------ version?

	a.Spring 2.5
	b.Spring 2.0
	c.Spring 3.0
	d.Spring 4.0

Correct answer: b

28. In Spring, what is the scope of a stateful bean is correct?

		a.Singleton scope
		b.Prototype scope
		c.Singleton scope and Prototype scope
		d.None of the above
	
	Correct answer: a

29. API stands for

	a.Application programming Interface
	b.Application programming Interaction
	
Correct answer: a

30. REST API stands for

	a.Representational State Transfer Application programming
	b.Rest Application Programming Interface
	c.Request State Transfer Application Programming Interface
	d.Request Endpoint Application Programming Interface

Correct answer: a

31.public static void main(String[] args) {
		Integer num1 =100;
		Integer num2 =100;
		Integer num3 =500;
		Integer num4 =500;
		
		if(num1 == num2) {
			System.out.println("num1 == num2");
		}
		else {
			System.out.println("num1 !== num2");
		}
		if(num3 == num4) {
			System.out.println("num3 == num4");
		}
		else {
			System.out.println("num3 !== num4");
		}
	}

	a.num1 == num2
	  num3 !== num4
	b.num1 !== num2
	  num3 !== num4
	c.num1 == num2
	  num3 == num4
	d.num1 !== num2
	  num3 !== num4

Correct answer: a

32.public static void main(String[] args) {
		int $_ = 5;
		System.out.println($_);
	}

	a.5
	b.Compiler error
	c.Runtime Error
	
Correct answer: a

33.public static void main(String[] args) {
		System.out.println('j' + 'a' + 'v' + 'a');
   }
	
	a.java
	b.Compiler error
	c.Runtime Error
	d.418
	
Correct answer: d

34.public static final void main(String[] args) {
		System.out.println("Java");
   }

	a.java
	b.Compiler error
	c.Runtime Error
	
Correct answer: a

35.public static void main(String[] args) {
		// to find number is even or odd without using %(Modulo) operator
		System.out.println(9&1);
		System.out.println(2&1);
		System.out.println(5&1);
		System.out.println(16&1);
		System.out.println(26&1);
   }

output: 1
	0
	1
	0
	0

36. public static void main(String[] args) {
		int x = 10;
		x = x * 5;
		System.out.println(x);
    }

	a.50
	b.Compiler error
	c.Runtime Error
	
Correct answer: a

37. public static void main(String[] args) {
		short x = 10;
		x = x * 5;
		System.out.println(x);
    }

	a.50
	b.Compiler error
	c.Runtime Error
	
Correct answer: b 
Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
Type mismatch: cannot convert from int to short.

38. public static void main(String[] args) {
		String s = "ONE"+1+2+"TWO"+"THREE"+3+4+"FOUR"+"FIVE"+5;
		System.out.println(s);		
    }

	a.ONE12TWOTHREE34FOURFIVE5
	b.ONE5TWOTHREE7FOURFIVE5
	
Correct answer: a

39. public static void main(String[] args) {
		if(1+1+1+1+1 == 5) {
			System.out.println("True");
		}
		else {
			System.out.println("False");
		}
    }

	a.True
	b.False
	
Correct answer: a

40. What is the default container in Spring Boot?

	a.Tomcat
	b.Jetty
	c.Undertow
	
Correct answer: a

41. What is META-INF?

	a.Public directory having static resources like HTML, Images, JS files
	b.Private directory cann't be accessed from outside
	
Correct answer: b

42. What is WEB-INF?

	a.Public directory having static resources like HTML, Images, JS files
	b.Private directory cann't be accessed from outside
	
Correct answer: a

43. YAML stands for?

	a.Yet Another Markup Language
	b.Yet Another Machine Language
	
Correct answer: a

44. How to run SpringBoot application to custom port?

	a.In application.properties, add server.port = 8181
	b.In application.yml file, add server:port: 8181
	c. All of the above

Correct answer: c

45. public static void main(String[] args) {
		System.out.println("hi");
		http://www.payilagam.com
		System.out.println("hello");
    }

	a.hi
          hello
	b.Compiler Error
	c.Runtime Error
	
Correct answer: a

46. public static void main(String[] args) {
		final String hi = "Hi: 5";
		final String hello = "Hi: " + hi.length();
		System.out.println(hi);
		System.out.println(hello);
     		System.out.println(hi == hello);
   }

	a.Hi: 5
	  Hi: 5
	  false
	b.Compiler Error
	c.Runtime Error
	d.Hi: 5
	  Hi: 5
	  True
	
Correct answer: a

47. public static void main(String[] args) {
		 System.out.println(null == null); 
		 System.out.println(null != null); 
    }

	a.true
	  false
	b.true
	  true
	c.false
	  true
	d.true
	  true

Correct answer: a

48. public static void main(String[] args) {
		byte n = 126;
		
		System.out.println("Sum: "+ n);
		n++;
		System.out.println("Sum: "+ n);
		n++;
		System.out.println("Sum: "+ n);
		n++;
		System.out.println("Sum: "+ n);
	}

	a.Sum: 126
	  Sum: 127
	  Sum: -128
	  Sum: -127
	b.Sum: 127
	  Sum: 128
          Sum: 129
          Sum: 130
	c.Compiler Error
	d.Runtime Error

Correct answer: a

49. public static void main(String[] args) {
		boolean b = 77 == 7_7;
		if(b){
			System.out.println("Underscore");
		}
		else{
			System.out.println("Not an Underscore");
		}
    }

	a.Underscore
	b.Not an Underscore
	c.Compiler Error
	d.Runtime Error

Correct answer: a

50. public static void main(String[] args) {
		String s1 = new String("hi");
		String s2 = new String("Viji, how are you,kids doing?");
		System.out.println(s1=s2);
    }

	a.true
	b.false
	c.Viji, how are you,kids doing?
	d.Compiler Error
	e.Runtime Error

Correct answer: c

51. public static void main(String[] args) {
		String a = "hi Sreedhar";
		String b = new String("hi Sreedhar");
		System.out.println(a==b);
    }

	a.true
	b.false
	c.hi Sreedhar
	d.Compiler Error
	e.Runtime Error

Correct answer: b

52. public static void main(String[] args) {
		int a = 5; 
		if(a==5) 
		 System.out.println("5 is equal");
		else 
		 System.out.println("5 is not equal");
		 System.out.println("how");
		 System.out.println("are");
		 System.out.println("you");
		 System.out.println("hello");
	}

	a.5 is equal
	  how
          are
          you
          hello
	b.5 is equal
	c.Compiler Error
	d.Runtime Error

Correct answer: a
