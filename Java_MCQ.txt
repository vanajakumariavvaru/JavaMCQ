1. public static void main(String[] args) {
  	String name = null;
     	Optional<String> of = Optional.of(name);   System.out.println(of);
   }

	a.null
	b.0
	c.NullPointerException
	
Correct answer: c

2. public static void main(String[] args) {
	Optional<String> empty = Optional.empty();
	System.out.println(empty);
   }

	a.null
	b.0
	c.NullPointerException
	d.Optional.empty

Correct answer: d

3. Optional.of() java 8 feature is

	a.Used to ensure that there is no null, if null is entered, NullPointerException
	b.May or may not be null. Used to respond flexibly

Correct answer: a

4. Optional.ofNullable() java 8 feature is

	a.Used to ensure that there is no null, if null is entered, NullPointerException
	b.May or may not be null. Used to respond flexibly

Correct answer: b

5. What is the purpose of Optional class in java?

	a.To create a collection of optional objects
	b.To perform functional programming operations
	c.To handle null values and prevent null pointer exceptions

Correct answer: c

6. Java 8 Features - Optional, How many ways to crate an optional?

	a.1
	b.2
	c.3
	d.4

Correct answer: c

7. public static void main(String[] args) {
	String name = "java";
	Optional<String> of1 = Optional.ofNullable(name);
	System.out.println(of1);
   }
  
	a.null
	b.0
	c.NullPointerException
	d.Optional.empty

Correct answer: d

8. public class Interview2 {

	int number = 20;
	Interview2()
	{
	    number = 10;
	}
	public static void main(String[] args) {
		Interview2 interview = new Interview2();
		System.out.println(interview.number);	
	}
}

	a.10
	b.20
	c.Compiler error
	d.Exception

Correct answer: a

9. public class OptionalIfIsPresent {

	public static void main(String[] args) {
		String[] names = new String[5];
		Optional<String> opt = Optional.ofNullable(names[4]);
		if(opt.isPresent()) System.out.println(names[4]);
		else System.out.println("value is null");
	}
   }

	a.NullPointerException
	b.null
	c.value is null

Correct answer: c

10. public class OptionalIfPresent {

	public static void main(String[] args) {
		String[] names = {"a", "b", "c", "d", "e"};
		Optional<String> opt = Optional.ofNullable(names[4]);
		opt.ifPresent(s -> System.out.println(s));
	}
}

	a.NullPointerException
	b.true
	c.e
	d.false

Correct answer: c

11. public class OptionalOrElse {

	public static void main(String[] args) {
		String[] names = {"a", "b", "c", "d", null, "f"};
		Optional<String> opt = Optional.ofNullable(names[4]);
		System.out.println(opt.orElse("Default"));
	}
}

	a.null
	b.Default
	c.e
	d.NullPointerException

Correct answer: b

12. Since Java 21, can we use Simple HelloWorld program without class name and PSVM method?

	a.True
	b.False

Correct answer: a

13. Which keyword is used to create a thread in Java?

	a.new
	b.class
	c.thread
	d.start

Correct answer: c

14. Which method is used to start a thread in Java?

	a.run()
	b.start()
	c.execute()
	d.begin()

Correct answer: b

15.Can we call the run() method directly to start a thread?

	a.Yes
	b.No
	c.Only certain conditions
	d.Only after calling start()

Correct answer: b

